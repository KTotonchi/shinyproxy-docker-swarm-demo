version: '3.8'

services:

  shinyproxy:
    image: presstofan/shinyproxy-example
    # The labels section is where you specify configuration values for Traefik. 
    # Docker labels donâ€™t do anything by themselves, but Traefik reads these so 
    # it knows how to treat containers.
    ports:
      - "8080"
    networks:
      - sp-net
      - traefik-public
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - "node.role==manager"
      labels:
          - "traefik.enable=true"
          - "traefik.http.routers.shinyproxy.rule=Host(`app.databentobox.com`)"
          - "traefik.http.routers.shinyproxy.entrypoints=http"
          - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
          - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
          - "traefik.http.routers.shinyproxy-secured.rule=Host(`app.databentobox.com`)"
          - "traefik.http.routers.shinyproxy-secured.entrypoints=https"
          - "traefik.http.routers.shinyproxy-secured.tls.certresolver=le"
    volumes:
      - ./application/application.yml:/opt/shinyproxy/application.yml
      - /var/run/docker.sock:/var/run/docker.sock
  
  euler:
    image: presstofan/shiny-euler-app

networks:
  sp-net:
    external: true
  traefik-public:
    external: true